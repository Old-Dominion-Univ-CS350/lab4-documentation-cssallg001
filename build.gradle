plugins {
   id 'java'
   id 'application'
   id 'org.ajoberstar.git-publish' version '4.2.0'
}

repositories {
    mavenCentral()
}


java {
    sourceCompatibility = JavaVersion.toVersion(11)
    targetCompatibility = JavaVersion.toVersion(11)
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
}

tasks.withType(Test) {
    useJUnitPlatform()
    ignoreFailures = true
    testLogging {
        events "passed", "skipped", "failed"
        }
}

application { //Allows  ./gradlew run --args=path-to-test-data
    mainClass = 'edu.odu.cs.MostCommonWords'
}

task copyHTML (type: Copy, dependsOn: ['build']) {
    from 'src/main/html'
    into 'build/reports'
}

task reports (type: Copy, dependsOn: ['javadoc', 'copyHTML']) {
    from 'build/docs'
    into 'build/reports'
}

task deploySite (type: Delete, dependsOn: 'gitPublishPush') {
    group = "Reporting"
    description  'Commit and push website changes to GitHub'
}

////  Publication of website to GitHub

gitPublishCopy.dependsOn reports

gitPublish {
    // where to publish to (repo must exist)
	repoUri = 'git@github.com:Old-Dominion-Univ-CS350/lab4-documentation-cssallg001.git'
// branch will be created if it doesn't exist
    branch = 'gh-pages'
  
    // if set, a shallow clone will be performed instead of pulling all history
    fetchDepth = null

    // generally, you don't need to touch this
    //repoDir = file("$buildDir/somewhereelse") // defaults to $buildDir/gitPublish

    // what to publish, this is a standard CopySpec
    contents {
        from 'build/reports'
    }

    // message used when committing changes
    commitMessage = 'Publishing website' // defaults to 'Generated by gradle-git-publish'
    
    // for signing commits, omit to use the default from your gitconfig
    sign = false
}