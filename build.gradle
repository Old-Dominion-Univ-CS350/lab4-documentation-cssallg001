plugins 
{
    id 'java'
    id 'application'
    id 'org.ajoberstar.git-publish' version '4.2.0'
 }
 
 repositories 
 {
    mavenCentral()
 }
 
 
 java 
 {
    sourceCompatibility = JavaVersion.toVersion(11)
    targetCompatibility = JavaVersion.toVersion(11)
 }
 
 dependencies 
 {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
 }
 
 tasks.withType(Test) 
 {
    useJUnitPlatform()
    ignoreFailures = true
    testLogging 
    {
        events "passed", "skipped", "failed"
    }
 }
 
 application //Allows  ./gradlew run --args=path-to-test-data
 { 
    mainClass = 'edu.odu.cs.MostCommonWords'
 }
 
 task reports (dependsOn: ['build', 'javadoc'], type:Copy)
 {
    println "build and javadoc has completed"
    println "Task: 'reports' is starting"
    from(file('src/main/html'))
    into(file('build/reports'))

    from(file('build/docs'))
    into(file('build/reports'))

    println "Task: 'reports' has completed"
 }
 
 task deployReports (dependsOn: ['reports'])
 {
    doFirst 
    {
        println "Task: 'deployReports' is starting"
    }

    doLast
    {
        println "Task: 'deployReports' has completed"
    }
 }
 



////////  Website publication on GitHub pages ///////////////////


def websiteRepo='git@github.com:Old-Dominion-Univ-CS350/lab4-documentation-cssallg001.git'

task clearPages(type: Delete) 
{
    delete 'build/gh-pages'
}

task clonePages(dependsOn: ['clearPages']) 
{                
    doLast {
        exec {
            workingDir = '.'
            commandLine = ['git', 'clone', websiteRepo, 'build/gh-pages']
        }
    }
}

task copyWebsite (dependsOn: ['reports', 'clonePages'])
{
    doLast
    {
        ant.copy (todir: 'build/gh-pages')
        {
            fileset(dir: 'build/jbake')
        }
    }
}

task updateGHPages (dependsOn: 'copyWebsite')
{
    group = "Reporting"
    description  'Copies reports to the website repo and pushes to GitHub'
    doLast
    {
        def pagesDir = "$buildDir/gh-pages"
        exec
        {
            workingDir = 'build/gh-pages'                               
            commandLine = ['git', 'add', '.']
        }
        exec
        {
            workingDir = 'build/gh-pages'
            commandLine = ['git', 'commit', '-m', 'Updating-webpages']  
        }
        exec
        {
            workingDir = 'build/gh-pages'
            commandLine = ['git', 'push']
        }
    }
}




